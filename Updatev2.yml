---
- name: Update Linux and Windows systems with centralized CSV logging
  hosts: all
  gather_facts: yes
  vars:
    windows_reboot: yes
    central_csv_file: /home/ansibleserver/Ansible-Projektarbeit/ansible_central_updates.csv

  tasks:
    # --------------------------
    # Debian/Ubuntu
    # --------------------------
    - name: Update APT-based Linux systems
      apt:
        update_cache: yes
        upgrade: dist
      when: ansible_os_family == "Debian"
      become: yes
      register: apt_result

    - name: Prepare APT log line
      set_fact:
        update_log_line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},Debian,APT,{{ 'OK' if not apt_result.failed else 'FAILED' }},NA"
      when: ansible_os_family == "Debian"

    # --------------------------
    # RHEL/CentOS (yum)
    # --------------------------
    - name: Update RHEL/CentOS systems with yum
      yum:
        name: "*"
        state: latest
      when: ansible_distribution in ["RedHat", "CentOS", "Rocky", "AlmaLinux"] and ansible_distribution_major_version | int < 9
      become: yes
      register: yum_result

    - name: Prepare YUM log line
      set_fact:
        update_log_line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},{{ ansible_distribution }},YUM,{{ 'OK' if not yum_result.failed else 'FAILED' }},NA"
      when: ansible_distribution in ["RedHat", "CentOS", "Rocky", "AlmaLinux"] and ansible_distribution_major_version | int < 9

    # --------------------------
    # Fedora 42+ (dnf shell)
    # --------------------------
    - name: Update Fedora 42+ systems using shell
      ansible.builtin.shell: dnf -y upgrade
      when: ansible_distribution == "Fedora" and ansible_distribution_major_version | int >= 42
      become: yes
      register: dnf_shell_result

    - name: Prepare DNF log line
      set_fact:
        update_log_line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},Fedora,DNF,{{ 'OK' if dnf_shell_result.rc == 0 else 'FAILED' }},NA"
      when: ansible_distribution == "Fedora" and ansible_distribution_major_version | int >= 42

    # --------------------------
    # openSUSE/SLE
    # --------------------------
    - name: Update Zypper-based Linux systems
      zypper:
        name: "*"
        state: latest
      when: ansible_os_family == "Suse"
      become: yes
      register: zypper_result

    - name: Prepare Zypper log line
      set_fact:
        update_log_line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},Suse,Zypper,{{ 'OK' if not zypper_result.failed else 'FAILED' }},NA"
      when: ansible_os_family == "Suse"

    # --------------------------
    # Windows
    # --------------------------
    - name: Install Windows updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
        reboot: "{{ windows_reboot }}"
      when: ansible_os_family == "Windows"
      register: win_result

    - name: Prepare Windows log line
      set_fact:
        update_log_line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},Windows,WinUpdates,OK,{{ win_result.reboot_required }}"
      when: ansible_os_family == "Windows"

    # --------------------------
    # Ensure central CSV exists (on Controller)
    # --------------------------
    - name: Ensure central CSV exists
      ansible.builtin.file:
        path: "{{ central_csv_file }}"
        state: touch
      delegate_to: localhost
      run_once: true

    - name: Add CSV header if file is empty
      ansible.builtin.shell: |
        if [ ! -s {{ central_csv_file }} ]; then
          echo "Datum,Uhrzeit,Host,OS,Update-Typ,Status,Reboot-Erforderlich" > {{ central_csv_file }}
        fi
      delegate_to: localhost
      run_once: true

    - name: Append update log to central CSV
      ansible.builtin.lineinfile:
        path: "{{ central_csv_file }}"
        line: "{{ update_log_line }}"
        create: yes
        insertafter: EOF
      delegate_to: localhost
