---
- name: Update all servers
  hosts: all
  gather_facts: yes
  become: yes
  vars:
    log_dir: "/tmp/update_logs"
  tasks:

    - name: Ensure log directory exists on controller
      file:
        path: "{{ log_dir }}"
        state: directory
      delegate_to: localhost

# --- Linux Updates ---
- name: Update Linux servers
  hosts: linux
  gather_facts: yes
  become: yes
  tasks:
    - name: Update package cache (Ubuntu/Debian)
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Upgrade all packages (Ubuntu/Debian)
      ansible.builtin.apt:
        upgrade: dist
      when: ansible_facts['os_family'] == "Debian"

    - name: Update package cache (Fedora/RHEL)
      ansible.builtin.dnf:
        update_cache: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Upgrade all packages (Fedora/RHEL)
      ansible.builtin.dnf:
        name: "*"
        state: latest
      when: ansible_facts['os_family'] == "RedHat"

    - name: Reboot if kernel upgraded
      ansible.builtin.reboot:
        reboot_timeout: 300
        test_command: whoami

    - name: Collect Linux updates for logging
      ansible.builtin.shell: |
        if [ "{{ ansible_facts['os_family'] }}" == "Debian" ]; then
          apt list --upgradable
        else
          dnf check-update
        fi
      register: linux_updates
      changed_when: false

    - name: Save Linux updates log
      copy:
        content: "{{ linux_updates.stdout }}"
        dest: "{{ log_dir }}/linux_updates_{{ inventory_hostname }}_{{ ansible_date_time.iso8601 }}.log"
      delegate_to: localhost

# --- Windows Updates ---
- name: Update Windows servers
  hosts: windows
  gather_facts: yes
  tasks:
    - name: Check for updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
        state: searched
      register: windows_pending

    - name: Install updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
        state: installed
        reboot: yes
      register: windows_updates

    - name: Save Windows updates log
      copy:
        content: "{{ windows_updates }}"
        dest: "{{ log_dir }}/windows_updates_{{ inventory_hostname }}_{{ ansible_date_time.iso8601 }}.log"
      delegate_to: localhost
