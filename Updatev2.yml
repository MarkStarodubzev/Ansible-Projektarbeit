---
- name: Update Linux and Windows systems with CSV logging
  hosts: all
  gather_facts: yes
  vars:
    windows_reboot: yes
    linux_csv_file: /var/log/ansible_updates.csv
    windows_csv_file: C:\Ansible\ansible_updates.csv

  tasks:
    # --------------------------
    # Debian/Ubuntu
    # --------------------------
    - name: Update APT-based Linux systems
      apt:
        update_cache: yes
        upgrade: dist
      when: ansible_os_family == "Debian"
      become: yes
      register: apt_result

    - name: Log APT update to CSV
      ansible.builtin.lineinfile:
        path: "{{ linux_csv_file }}"
        create: yes
        line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},Debian,APT,{{ 'OK' if not apt_result.failed else 'FAILED' }},NA"
      when: ansible_os_family == "Debian"
      become: yes

    # --------------------------
    # RHEL/CentOS (yum)
    # --------------------------
    - name: Update RHEL/CentOS systems with yum
      yum:
        name: "*"
        state: latest
      when: ansible_distribution in ["RedHat", "CentOS", "Rocky", "AlmaLinux"] and ansible_distribution_major_version | int < 9
      become: yes
      register: yum_result

    - name: Log YUM update to CSV
      ansible.builtin.lineinfile:
        path: "{{ linux_csv_file }}"
        create: yes
        line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},{{ ansible_distribution }},YUM,{{ 'OK' if not yum_result.failed else 'FAILED' }},NA"
      when: ansible_distribution in ["RedHat", "CentOS", "Rocky", "AlmaLinux"] and ansible_distribution_major_version | int < 9
      become: yes

    # --------------------------
    # Fedora 42+ (dnf shell)
    # --------------------------
    - name: Update Fedora 42+ systems using shell
      ansible.builtin.shell: dnf -y upgrade
      when: ansible_distribution == "Fedora" and ansible_distribution_major_version | int >= 42
      become: yes
      register: dnf_shell_result

    - name: Log DNF shell update to CSV
      ansible.builtin.lineinfile:
        path: "{{ linux_csv_file }}"
        create: yes
        line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},Fedora,DNF,{{ 'OK' if dnf_shell_result.rc == 0 else 'FAILED' }},NA"
      when: ansible_distribution == "Fedora" and ansible_distribution_major_version | int >= 42
      become: yes

    # --------------------------
    # openSUSE/SLE
    # --------------------------
    - name: Update Zypper-based Linux systems
      zypper:
        name: "*"
        state: latest
      when: ansible_os_family == "Suse"
      become: yes
      register: zypper_result

    - name: Log Zypper update to CSV
      ansible.builtin.lineinfile:
        path: "{{ linux_csv_file }}"
        create: yes
        line: "{{ ansible_date_time.date }},{{ ansible_date_time.time }},{{ inventory_hostname }},Suse,Zypper,{{ 'OK' if not zypper_result.failed else 'FAILED' }},NA"
      when: ansible_os_family == "Suse"
      become: yes

    # --------------------------
    # Windows
    # --------------------------
    - name: Install Windows updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
        reboot: "{{ windows_reboot }}"
      when: ansible_os_family == "Windows"
      register: win_result

    - name: Log Windows update to CSV
      win_shell: |
        $logfile = "{{ windows_csv_file }}"
        if (!(Test-Path $logfile)) { 
            New-Item -ItemType File -Path $logfile -Force
            Add-Content -Path $logfile -Value "Datum,Uhrzeit,Host,OS,Update-Typ,Status,Reboot-Erforderlich"
        }
        $status = if ($env:ANSIBLE_FAILED -eq "True") { "FAILED" } else { "OK" }
        Add-Content -Path $logfile -Value "$(Get-Date -Format yyyy-MM-dd),$(Get-Date -Format HH:mm:ss),$env:COMPUTERNAME,Windows,WinUpdates,OK,{{ win_result.reboot_required }}"
      when: ansible_os_family == "Windows"
