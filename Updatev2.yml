---
- name: Update Linux servers (Ubuntu & Fedora)
  hosts: linux
  gather_facts: yes
  become: yes
  vars_files:
    - vault.yml
  vars:
    # sorgt daf√ºr, dass sudo schon beim gather_facts funktioniert
    ansible_become_password: "{{ become_passwords[inventory_hostname] }}"
  tasks:
    - name: Update package cache (Ubuntu/Debian)
      apt:
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Upgrade all packages (Ubuntu/Debian)
      apt:
        upgrade: dist
        autoremove: yes
        autoclean: yes
      when: ansible_facts['os_family'] == "Debian"

    - name: Update package cache (Fedora/RHEL)
      dnf5:
        update_cache: yes
      when: ansible_facts['os_family'] == "RedHat"

    - name: Upgrade all packages (Fedora/RHEL)
      dnf5:
        name: "*"
        state: latest
      when: ansible_facts['os_family'] == "RedHat"

    - name: Reboot if kernel upgraded
      reboot:
        reboot_timeout: 200
        test_command: whoami

    - name: Collect Linux updates for logging
      set_fact:
        updates_log_entry:
          host: "{{ inventory_hostname }}"
          os: "{{ ansible_facts['distribution'] }}"
          updates: "{{ ansible_facts['pkg_mgr'] }}"
      delegate_to: localhost
      run_once: false

- name: Update Windows servers
  hosts: windows
  gather_facts: yes
  tasks:
    - name: Check for updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
        state: searched
      register: windows_pending

    - name: Install updates
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
        state: installed
        reboot: yes
      register: windows_updates

    - name: Collect Windows updates for logging
      set_fact:
        updates_log_entry:
          host: "{{ inventory_hostname }}"
          os: "Windows"
          updates: "{{ windows_updates }}"
      delegate_to: localhost
      run_once: false

- name: Write updates log to JSON file on controller
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Save all updates to timestamped JSON
      copy:
        dest: "updates_log_{{ lookup('pipe', 'date +%Y%m%d_%H%M%S') }}.json"
        content: "{{ hostvars | json_query('*[].updates_log_entry') | to_nice_json }}"
